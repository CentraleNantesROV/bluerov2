<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from bluerov2.xacro                 | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="bluerov2">
  <!-- Vehicle base link -->
  <link name="bluerov2/base_link">
    <inertial>
      <mass value="14.8"/>
      <origin xyz="0 0 -0.116178631882836"/>
      <!-- BlueROV2 values from "Model Predictive Control for the BlueROV2", 
        Emil MÃ¡r Einarsson, Andris Lipenitis, Master thesis, 2020 
        for now make Ignition crash?-->
      <!--         <inertia ixx="0.21" ixy="0.00" ixz="0.00" iyy="0.245" iyz="0.00" izz="0.245"/> -->
      <inertia ixx="5.2539" ixy="0.0144" ixz="0.3341" iyy="7.9420" iyz="0.026" izz="6.9123"/>
      <!-- Perfect rectangle -->
      <!--        <inertia
        ixx="${mass/12*(y_size*y_size+z_size*z_size)}" ixy="0.0" ixz="0.0"
        iyy="${mass/12*(x_size*x_size + z_size*z_size)}" iyz="0.0"
        izz="${mass/12*(x_size*x_size + y_size*y_size)}" />-->
    </inertial>
    <visual>
      <geometry>
        <mesh filename="package://bluerov2_description/meshes/bluerov2_noprop.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 -0.029044657970709"/>
      <!-- Box adjusted for buoyancy -->
      <geometry>
        <box size="0.464714527531344 0.29044657970709 0.116178631882836"/>
      </geometry>
    </collision>
    <!--    <gazebo>
        <velocity_decay>
            <linear>-250.15 -70.364 -170.955</linear>
            <angular>1.888 0.761 3.744</angular>
        </velocity_decay>
</gazebo>-->
  </link>
  <gazebo>
    <plugin filename="ignition-gazebo-hydrodynamics-system" name="ignition::gazebo::systems::Hydrodynamics">
      <!--     <density>${density}</density> -->
      <!-- Ignition notations from Handbook of Marine Craft, Fossen, 2011 -->
      <link_name>bluerov2/base_link</link_name>
      <!-- BlueROV2 heavy values from "6-DoF Modelling and Control of a Remotely Operated Vehicle"
        Wu, Master thesis, Flinder University, 2018  -->
      <!-- Negative diagonal values of added mass matrix [Fossen (6.38)] -->
      <xDotU>-5.5</xDotU>
      <yDotV>-12.7</yDotV>
      <zDotW>-14.57</zDotW>
      <kDotP>-0.12</kDotP>
      <mDotQ>-0.12</mDotQ>
      <nDotR>-0.12</nDotR>
      <!-- From "Numerical Modelling and Experimental Testing of the Hydrodynamic Characteristics 
        for an Open-Frame Remotely Operated Vehicle",  Li et al, Marine Science and Engineering, 2020         -->
      <!-- Negative linear damping [Fossen (6.62)] -->
      <!--    <xU>-1.31</xU>    
    <yV>-9.14</yV>
    <zW>-2.015</zW>
    <kP>-0.</kP>
    <mQ>-0.</mQ>
    <nR>-0.</nR>-->
      <!-- Negative quadratic damping [Fossen (6.62)] -->
      <xUabsU>-33.800000000000004</xUabsU>
      <yVabsV>-54.26875</yVabsV>
      <zWabsW>-73.37135</zWabsW>
      <kPabsP>-40.0</kPabsP>
      <mQabsQ>-40.0</mQabsQ>
      <nRabsR>-40.0</nRabsR>
      <!-- BlueROV2 values from "Model Predictive Control for the BlueROV2", 
        Emil MÃ¡r Einarsson, Andris Lipenitis, Master thesis, 2020  -->
      <!-- Negative linear damping -->
      <xU>-25.15</xU>
      <yV>-7.364</yV>
      <zW>-17.955</zW>
      <kP>-10.888</kP>
      <mQ>-20.761</mQ>
      <nR>-3.744</nR>
      <!-- Negative quadratic damping -->
      <!--    <xUU>-17.77</xUU>
    <yVV>-125.9</yVV>
    <zWW>-72.36</zWW>
    <kPP>-0.1246</kPP>
    <mQQ>-0.1246</mQQ>
    <nRR>-0.1857</nRR>-->
    </plugin>
  </gazebo>
  <!-- all 6 thrusters -->
  <link name="bluerov2/thruster1">
    <visual>
      <geometry>
        <mesh filename="package://bluerov2_description/meshes/bluerov2_propcw.dae"/>
      </geometry>
    </visual>
    <!--        <collision>
            <origin rpy="0 ${PI/2} 0"/>
        <geometry>            
            <cylinder length="${prop_l}" radius="${prop_r}"/>
        </geometry>
      </collision>-->
    <inertial>
      <!-- thruster axis is X -->
      <origin rpy="0 0 0" xyz="0.0175 0 0"/>
      <mass value="0.07"/>
      <inertia ixx="8.750000000000001e-05" ixy="0.0" ixz="0.0" iyy="5.089583333333334e-05" iyz="0.0" izz="5.089583333333334e-05"/>
    </inertial>
  </link>
  <!-- Joint between thruster link and vehicle base link -->
  <joint name="thruster1" type="continuous">
    <origin rpy="0 0 0.7853981634" xyz="0.1355 -0.1 -0.0725"/>
    <axis xyz="1 0 0"/>
    <parent link="bluerov2/base_link"/>
    <child link="bluerov2/thruster1"/>
    <limits effort="-1" velocity="-1"/>
  </joint>
  <!-- ignition topic is /model/{ns}/joint/{joint_name}/cmd_pos -->
  <!--    <xacro:if value="$(arg simulation)"> -->
  <gazebo>
    <plugin filename="ignition-gazebo-thruster-system" name="ignition::gazebo::systems::Thruster">
      <namespace>bluerov2</namespace>
      <joint_name>thruster1</joint_name>
      <topic>thruster1/cmd</topic>
      <thrust_coefficient>0.011</thrust_coefficient>
      <fluid_density>1000</fluid_density>
      <propeller_diameter>0.1</propeller_diameter>
      <velocity_control>true</velocity_control>
      <use_angvel_cmd>false</use_angvel_cmd>
      <max_thrust_cmd>40</max_thrust_cmd>
      <min_thrust_cmd>-40</min_thrust_cmd>
    </plugin>
  </gazebo>
  <!--  </xacro:if> -->
  <link name="bluerov2/thruster2">
    <visual>
      <geometry>
        <mesh filename="package://bluerov2_description/meshes/bluerov2_propcw.dae"/>
      </geometry>
    </visual>
    <!--        <collision>
            <origin rpy="0 ${PI/2} 0"/>
        <geometry>            
            <cylinder length="${prop_l}" radius="${prop_r}"/>
        </geometry>
      </collision>-->
    <inertial>
      <!-- thruster axis is X -->
      <origin rpy="0 0 0" xyz="0.0175 0 0"/>
      <mass value="0.07"/>
      <inertia ixx="8.750000000000001e-05" ixy="0.0" ixz="0.0" iyy="5.089583333333334e-05" iyz="0.0" izz="5.089583333333334e-05"/>
    </inertial>
  </link>
  <!-- Joint between thruster link and vehicle base link -->
  <joint name="thruster2" type="continuous">
    <origin rpy="0 0 -0.7853981634" xyz="0.1355 0.1 -0.0725"/>
    <axis xyz="1 0 0"/>
    <parent link="bluerov2/base_link"/>
    <child link="bluerov2/thruster2"/>
    <limits effort="-1" velocity="-1"/>
  </joint>
  <!-- ignition topic is /model/{ns}/joint/{joint_name}/cmd_pos -->
  <!--    <xacro:if value="$(arg simulation)"> -->
  <gazebo>
    <plugin filename="ignition-gazebo-thruster-system" name="ignition::gazebo::systems::Thruster">
      <namespace>bluerov2</namespace>
      <joint_name>thruster2</joint_name>
      <topic>thruster2/cmd</topic>
      <thrust_coefficient>0.011</thrust_coefficient>
      <fluid_density>1000</fluid_density>
      <propeller_diameter>0.1</propeller_diameter>
      <velocity_control>true</velocity_control>
      <use_angvel_cmd>false</use_angvel_cmd>
      <max_thrust_cmd>40</max_thrust_cmd>
      <min_thrust_cmd>-40</min_thrust_cmd>
    </plugin>
  </gazebo>
  <!--  </xacro:if> -->
  <link name="bluerov2/thruster3">
    <visual>
      <geometry>
        <mesh filename="package://bluerov2_description/meshes/bluerov2_propccw.dae"/>
      </geometry>
    </visual>
    <!--        <collision>
            <origin rpy="0 ${PI/2} 0"/>
        <geometry>            
            <cylinder length="${prop_l}" radius="${prop_r}"/>
        </geometry>
      </collision>-->
    <inertial>
      <!-- thruster axis is X -->
      <origin rpy="0 0 0" xyz="0.0175 0 0"/>
      <mass value="0.07"/>
      <inertia ixx="8.750000000000001e-05" ixy="0.0" ixz="0.0" iyy="5.089583333333334e-05" iyz="0.0" izz="5.089583333333334e-05"/>
    </inertial>
  </link>
  <!-- Joint between thruster link and vehicle base link -->
  <joint name="thruster3" type="continuous">
    <origin rpy="0 0 2.3561944902" xyz="-0.1475 -0.1 -0.0725"/>
    <axis xyz="-1 0 0"/>
    <parent link="bluerov2/base_link"/>
    <child link="bluerov2/thruster3"/>
    <limits effort="-1" velocity="-1"/>
  </joint>
  <!-- ignition topic is /model/{ns}/joint/{joint_name}/cmd_pos -->
  <!--    <xacro:if value="$(arg simulation)"> -->
  <gazebo>
    <plugin filename="ignition-gazebo-thruster-system" name="ignition::gazebo::systems::Thruster">
      <namespace>bluerov2</namespace>
      <joint_name>thruster3</joint_name>
      <topic>thruster3/cmd</topic>
      <thrust_coefficient>0.011</thrust_coefficient>
      <fluid_density>1000</fluid_density>
      <propeller_diameter>0.1</propeller_diameter>
      <velocity_control>true</velocity_control>
      <use_angvel_cmd>false</use_angvel_cmd>
      <max_thrust_cmd>40</max_thrust_cmd>
      <min_thrust_cmd>-40</min_thrust_cmd>
    </plugin>
  </gazebo>
  <!--  </xacro:if> -->
  <link name="bluerov2/thruster4">
    <visual>
      <geometry>
        <mesh filename="package://bluerov2_description/meshes/bluerov2_propccw.dae"/>
      </geometry>
    </visual>
    <!--        <collision>
            <origin rpy="0 ${PI/2} 0"/>
        <geometry>            
            <cylinder length="${prop_l}" radius="${prop_r}"/>
        </geometry>
      </collision>-->
    <inertial>
      <!-- thruster axis is X -->
      <origin rpy="0 0 0" xyz="0.0175 0 0"/>
      <mass value="0.07"/>
      <inertia ixx="8.750000000000001e-05" ixy="0.0" ixz="0.0" iyy="5.089583333333334e-05" iyz="0.0" izz="5.089583333333334e-05"/>
    </inertial>
  </link>
  <!-- Joint between thruster link and vehicle base link -->
  <joint name="thruster4" type="continuous">
    <origin rpy="0 0 -2.3561944902" xyz="-0.1475 0.1 -0.0725"/>
    <axis xyz="-1 0 0"/>
    <parent link="bluerov2/base_link"/>
    <child link="bluerov2/thruster4"/>
    <limits effort="-1" velocity="-1"/>
  </joint>
  <!-- ignition topic is /model/{ns}/joint/{joint_name}/cmd_pos -->
  <!--    <xacro:if value="$(arg simulation)"> -->
  <gazebo>
    <plugin filename="ignition-gazebo-thruster-system" name="ignition::gazebo::systems::Thruster">
      <namespace>bluerov2</namespace>
      <joint_name>thruster4</joint_name>
      <topic>thruster4/cmd</topic>
      <thrust_coefficient>0.011</thrust_coefficient>
      <fluid_density>1000</fluid_density>
      <propeller_diameter>0.1</propeller_diameter>
      <velocity_control>true</velocity_control>
      <use_angvel_cmd>false</use_angvel_cmd>
      <max_thrust_cmd>40</max_thrust_cmd>
      <min_thrust_cmd>-40</min_thrust_cmd>
    </plugin>
  </gazebo>
  <!--  </xacro:if> -->
  <link name="bluerov2/thruster5">
    <visual>
      <geometry>
        <mesh filename="package://bluerov2_description/meshes/bluerov2_propcw.dae"/>
      </geometry>
    </visual>
    <!--        <collision>
            <origin rpy="0 ${PI/2} 0"/>
        <geometry>            
            <cylinder length="${prop_l}" radius="${prop_r}"/>
        </geometry>
      </collision>-->
    <inertial>
      <!-- thruster axis is X -->
      <origin rpy="0 0 0" xyz="0.0175 0 0"/>
      <mass value="0.07"/>
      <inertia ixx="8.750000000000001e-05" ixy="0.0" ixz="0.0" iyy="5.089583333333334e-05" iyz="0.0" izz="5.089583333333334e-05"/>
    </inertial>
  </link>
  <!-- Joint between thruster link and vehicle base link -->
  <joint name="thruster5" type="continuous">
    <origin rpy="0 -1.5707963268 0" xyz="0.0025 -0.1105 -0.005"/>
    <axis xyz="1 0 0"/>
    <parent link="bluerov2/base_link"/>
    <child link="bluerov2/thruster5"/>
    <limits effort="-1" velocity="-1"/>
  </joint>
  <!-- ignition topic is /model/{ns}/joint/{joint_name}/cmd_pos -->
  <!--    <xacro:if value="$(arg simulation)"> -->
  <gazebo>
    <plugin filename="ignition-gazebo-thruster-system" name="ignition::gazebo::systems::Thruster">
      <namespace>bluerov2</namespace>
      <joint_name>thruster5</joint_name>
      <topic>thruster5/cmd</topic>
      <thrust_coefficient>0.011</thrust_coefficient>
      <fluid_density>1000</fluid_density>
      <propeller_diameter>0.1</propeller_diameter>
      <velocity_control>true</velocity_control>
      <use_angvel_cmd>false</use_angvel_cmd>
      <max_thrust_cmd>40</max_thrust_cmd>
      <min_thrust_cmd>-40</min_thrust_cmd>
    </plugin>
  </gazebo>
  <!--  </xacro:if> -->
  <link name="bluerov2/thruster6">
    <visual>
      <geometry>
        <mesh filename="package://bluerov2_description/meshes/bluerov2_propccw.dae"/>
      </geometry>
    </visual>
    <!--        <collision>
            <origin rpy="0 ${PI/2} 0"/>
        <geometry>            
            <cylinder length="${prop_l}" radius="${prop_r}"/>
        </geometry>
      </collision>-->
    <inertial>
      <!-- thruster axis is X -->
      <origin rpy="0 0 0" xyz="0.0175 0 0"/>
      <mass value="0.07"/>
      <inertia ixx="8.750000000000001e-05" ixy="0.0" ixz="0.0" iyy="5.089583333333334e-05" iyz="0.0" izz="5.089583333333334e-05"/>
    </inertial>
  </link>
  <!-- Joint between thruster link and vehicle base link -->
  <joint name="thruster6" type="continuous">
    <origin rpy="0 -1.5707963268 0" xyz="0.0025 0.1105 -0.005"/>
    <axis xyz="-1 0 0"/>
    <parent link="bluerov2/base_link"/>
    <child link="bluerov2/thruster6"/>
    <limits effort="-1" velocity="-1"/>
  </joint>
  <!-- ignition topic is /model/{ns}/joint/{joint_name}/cmd_pos -->
  <!--    <xacro:if value="$(arg simulation)"> -->
  <gazebo>
    <plugin filename="ignition-gazebo-thruster-system" name="ignition::gazebo::systems::Thruster">
      <namespace>bluerov2</namespace>
      <joint_name>thruster6</joint_name>
      <topic>thruster6/cmd</topic>
      <thrust_coefficient>0.011</thrust_coefficient>
      <fluid_density>1000</fluid_density>
      <propeller_diameter>0.1</propeller_diameter>
      <velocity_control>true</velocity_control>
      <use_angvel_cmd>false</use_angvel_cmd>
      <max_thrust_cmd>40</max_thrust_cmd>
      <min_thrust_cmd>-40</min_thrust_cmd>
    </plugin>
  </gazebo>
  <!--  </xacro:if> -->
  <link name="bluerov2/mpu"/>
  <gazebo reference="bluerov2/mpu">
    <sensor name="mpu_imu" type="imu">
      <always_on>1</always_on>
      <update_rate>10</update_rate>
      <visualize>true</visualize>
      <topic>bluerov2/mpu</topic>
      <gz_frame_id>bluerov2/mpu</gz_frame_id>
      <imu>
        <angular_velocity>
          <x>
            <noise type="gaussian">
              <mean>0</mean>
              <stddev>0.009</stddev>
              <bias_mean>0.00075</bias_mean>
              <bias_stddev>0.005</bias_stddev>
              <dynamic_bias_stddev>0.00002</dynamic_bias_stddev>
              <dynamic_bias_correlation_time>400.0</dynamic_bias_correlation_time>
              <precision>0.00025</precision>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0</mean>
              <stddev>0.009</stddev>
              <bias_mean>0.00075</bias_mean>
              <bias_stddev>0.005</bias_stddev>
              <dynamic_bias_stddev>0.00002</dynamic_bias_stddev>
              <dynamic_bias_correlation_time>400.0</dynamic_bias_correlation_time>
              <precision>0.00025</precision>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0</mean>
              <stddev>0.009</stddev>
              <bias_mean>0.00075</bias_mean>
              <bias_stddev>0.005</bias_stddev>
              <dynamic_bias_stddev>0.00002</dynamic_bias_stddev>
              <dynamic_bias_correlation_time>400.0</dynamic_bias_correlation_time>
              <precision>0.00025</precision>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>0</mean>
              <stddev>0.021</stddev>
              <bias_mean>0.05</bias_mean>
              <bias_stddev>0.0075</bias_stddev>
              <dynamic_bias_stddev>0.000375</dynamic_bias_stddev>
              <dynamic_bias_correlation_time>175.0</dynamic_bias_correlation_time>
              <precision>0.005</precision>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0</mean>
              <stddev>0.021</stddev>
              <bias_mean>0.05</bias_mean>
              <bias_stddev>0.0075</bias_stddev>
              <dynamic_bias_stddev>0.000375</dynamic_bias_stddev>
              <dynamic_bias_correlation_time>175.0</dynamic_bias_correlation_time>
              <precision>0.005</precision>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0</mean>
              <stddev>0.021</stddev>
              <bias_mean>0.05</bias_mean>
              <bias_stddev>0.0075</bias_stddev>
              <dynamic_bias_stddev>0.000375</dynamic_bias_stddev>
              <dynamic_bias_correlation_time>175.0</dynamic_bias_correlation_time>
              <precision>0.005</precision>
            </noise>
          </z>
        </linear_acceleration>
        <orientation_reference_frame>
          <localization>ENU</localization>
        </orientation_reference_frame>
      </imu>
    </sensor>
  </gazebo>
  <joint name="mpu" type="fixed">
    <origin rpy="0 0 -1.57079635" xyz="0.1 0 0"/>
    <parent link="bluerov2/base_link"/>
    <child link="bluerov2/mpu"/>
  </joint>
  <link name="bluerov2/lsm"/>
  <gazebo reference="bluerov2/lsm">
    <sensor name="lsm_imu" type="imu">
      <always_on>1</always_on>
      <update_rate>10</update_rate>
      <visualize>true</visualize>
      <topic>bluerov2/lsm</topic>
      <gz_frame_id>bluerov2/lsm</gz_frame_id>
      <imu>
        <angular_velocity>
          <x>
            <noise type="gaussian">
              <mean>0</mean>
              <stddev>0.009</stddev>
              <bias_mean>0.00075</bias_mean>
              <bias_stddev>0.005</bias_stddev>
              <dynamic_bias_stddev>0.00002</dynamic_bias_stddev>
              <dynamic_bias_correlation_time>400.0</dynamic_bias_correlation_time>
              <precision>0.00025</precision>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0</mean>
              <stddev>0.009</stddev>
              <bias_mean>0.00075</bias_mean>
              <bias_stddev>0.005</bias_stddev>
              <dynamic_bias_stddev>0.00002</dynamic_bias_stddev>
              <dynamic_bias_correlation_time>400.0</dynamic_bias_correlation_time>
              <precision>0.00025</precision>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0</mean>
              <stddev>0.009</stddev>
              <bias_mean>0.00075</bias_mean>
              <bias_stddev>0.005</bias_stddev>
              <dynamic_bias_stddev>0.00002</dynamic_bias_stddev>
              <dynamic_bias_correlation_time>400.0</dynamic_bias_correlation_time>
              <precision>0.00025</precision>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>0</mean>
              <stddev>0.021</stddev>
              <bias_mean>0.05</bias_mean>
              <bias_stddev>0.0075</bias_stddev>
              <dynamic_bias_stddev>0.000375</dynamic_bias_stddev>
              <dynamic_bias_correlation_time>175.0</dynamic_bias_correlation_time>
              <precision>0.005</precision>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0</mean>
              <stddev>0.021</stddev>
              <bias_mean>0.05</bias_mean>
              <bias_stddev>0.0075</bias_stddev>
              <dynamic_bias_stddev>0.000375</dynamic_bias_stddev>
              <dynamic_bias_correlation_time>175.0</dynamic_bias_correlation_time>
              <precision>0.005</precision>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0</mean>
              <stddev>0.021</stddev>
              <bias_mean>0.05</bias_mean>
              <bias_stddev>0.0075</bias_stddev>
              <dynamic_bias_stddev>0.000375</dynamic_bias_stddev>
              <dynamic_bias_correlation_time>175.0</dynamic_bias_correlation_time>
              <precision>0.005</precision>
            </noise>
          </z>
        </linear_acceleration>
        <orientation_reference_frame>
          <localization>ENU</localization>
        </orientation_reference_frame>
      </imu>
    </sensor>
  </gazebo>
  <joint name="lsm" type="fixed">
    <origin rpy="0 0 -1.57079635" xyz="0.1 0 0"/>
    <parent link="bluerov2/base_link"/>
    <child link="bluerov2/lsm"/>
  </joint>
  <!-- Pressure Sensor  -->
  <!--  <xacro:default_pressure parent_link="${ns}/base_link" sensor_name="baro">
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </xacro:default_pressure>-->
  <link name="bluerov2/camera">
    <inertial>
      <mass value="0.015"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="tilt" type="revolute">
    <parent link="bluerov2/base_link"/>
    <child link="bluerov2/camera"/>
    <origin rpy="0 0 0" xyz="0.16999999999999998 0 0"/>
    <axis xyz="0 1 0"/>
    <limit effort="100" lower="-1.0471975666666666" upper="1.0471975666666666" velocity="5.0"/>
    <dynamics damping="0.8"/>
  </joint>
  <link name="bluerov2/camera_optical"/>
  <joint name="camera_optical" type="fixed">
    <parent link="bluerov2/camera"/>
    <child link="bluerov2/camera_optical"/>
    <origin rpy="-1.57079635 0 -1.57079635"/>
  </joint>
  <link name="bluerov2/sonar">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 -0.022"/>
      <geometry>
        <mesh filename="package://bluerov2_description/meshes/ping360_sonar.dae" scale="0.01 0.01 0.01"/>
        /&gt;
      
      </geometry>
    </visual>
  </link>
  <joint name="sonar" type="fixed">
    <parent link="bluerov2/base_link"/>
    <child link="bluerov2/sonar"/>
    <origin xyz="0.135 0.108 0.118"/>
  </joint>
  <gazebo reference="bluerov2/sonar">
    <sensor name="ping360_sonar" type="gpu_ray">
      <update_rate>5</update_rate>
      <topic>bluerov2/sonar</topic>
      <visualize>true</visualize>
      <gz_frame_id>bluerov2/sonar</gz_frame_id>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>0.0</min_angle>
            <max_angle>6.28319</max_angle>
          </horizontal>
          <vertical>
            <samples>10</samples>
            <resolution>1</resolution>
            <min_angle>-0.1</min_angle>
            <max_angle>0.1</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.1</min>
          <max>20.</max>
          <resolution>0.015</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
    </sensor>
  </gazebo>
  <gazebo>
    <plugin filename="ignition-gazebo-joint-position-controller-system" name="ignition::gazebo::systems::JointPositionController">
      <joint_name>tilt</joint_name>
      <p_gain>10.</p_gain>
      <i_gain>0.2</i_gain>
      <d_gain>0.1</d_gain>
      <i_max>10</i_max>
      <i_min>-10</i_min>
    </plugin>
  </gazebo>
  <gazebo reference="bluerov2/camera">
    <sensor name="camera" type="camera">
      <camera>
        <optical_frame_id>bluerov2/camera_optical</optical_frame_id>
        <horizontal_fov>1.047</horizontal_fov>
        <image>
          <width>640</width>
          <height>400</height>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
      </camera>
      <always_on>1</always_on>
      <update_rate>30</update_rate>
      <visualize>true</visualize>
      <topic>bluerov2/image</topic>
      <enable_metrics>false</enable_metrics>
    </sensor>
  </gazebo>
  <gazebo>
    <plugin filename="ignition-gazebo-joint-state-publisher-system" name="ignition::gazebo::systems::JointStatePublisher"/>
    <plugin filename="ignition-gazebo-odometry-publisher-system" name="ignition::gazebo::systems::OdometryPublisher">
      <odom_frame>bluerov2/odom</odom_frame>
      <dimensions>3</dimensions>
      <robot_base_frame>bluerov2/base_link</robot_base_frame>
      <odom_publish_frequency>10</odom_publish_frequency>
    </plugin>
    <plugin filename="ignition-gazebo-pose-publisher-system" name="ignition::gazebo::systems::PosePublisher">
      <publish_link_pose>false</publish_link_pose>
      <publish_collision_pose>false</publish_collision_pose>
      <publish_visual_pose>false</publish_visual_pose>
      <publish_nested_model_pose>true</publish_nested_model_pose>
    </plugin>
  </gazebo>
</robot>
